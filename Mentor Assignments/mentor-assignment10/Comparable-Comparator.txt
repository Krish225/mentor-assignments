Describe the purpose of java.lang.Comparable and java.util.Comparator interfaces with an implementation example.

Comparable and Comparator both are interfaces and can be used to sort collection elements.

Using Comparable 
	A comparable object is capable of comparing itself with another object.
	Comparable is meant for objects with natural ordering which means the object itself must know how it is to be ordered.
	Comparable interface compares “this” reference with the object specified. 
	Comparable provides a single sorting sequence

Using Comparator
	Unlike Comparable, Comparator is external to the element type we are comparing. It’s a separate class. 
	We create multiple separate classes (that implement Comparator) to compare by different members.
	Collections class has a second sort() method and it takes Comparator. The sort() method invokes the compare() to sort objects.
	Comparator in Java compares two different class objects provided.
	The Comparator provides multiple sorting sequences.